"use strict";var w=Object.defineProperty;var h=(s,r,e)=>r in s?w(s,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[r]=e;var n=(s,r,e)=>(h(s,typeof r!="symbol"?r+"":r,e),e);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});function u(s,r={type:"module"}){const e=new i(s,r);return function(){return e}}class i{constructor(r,e={type:"module"}){n(this,"worker");n(this,"eventSeq",0);n(this,"pendingTasks",new Map);n(this,"taskWithTransferable",(r,e,...t)=>{const o=this.eventSeq++,a={resolve:()=>{throw new Error("Placeholder not replaced")},reject:()=>{throw new Error("Placeholder not replaced")}},c=new Promise((l,k)=>{Object.assign(a,{resolve:l,reject:k})});this.pendingTasks.set(o,a);const d={eventType:r,eventSeq:o,args:t};return this.worker.postMessage(d,e),c});n(this,"task",(r,...e)=>this.taskWithTransferable(r,[],...e));n(this,"handleResponse",r=>{const{data:e}=r,t=this.pendingTasks.get(e.eventSeq);if(!t)throw new Error(`Invalid worker response: pending task with seq #${e.eventSeq} not found`);e.result.success?t.resolve(e.result.response):t.reject(e.result.reason)});this.worker=new Worker(r,e),this.worker.addEventListener("message",t=>this.handleResponse(t))}}exports.BrowserBridge=i;exports.startWorker=u;
