"use strict";var u=Object.defineProperty;var f=(t,e,s)=>e in t?u(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var n=(t,e,s)=>(f(t,typeof e!="symbol"?e+"":e,s),s);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});class i{constructor(e,s){this.response=e,this.transfer=s}}class p{constructor(){n(this,"handlers",new Map);n(this,"handleRequest",async e=>{const{eventType:s,eventSeq:c,args:d}=e.data;try{const a=this.handlers.get(s);if(!a)return;const r=await a(...d);let l,o;r instanceof i?{response:l,transfer:o}=r:(l=r,o=[]);const h={eventType:s,eventSeq:c,result:{success:!0,response:l}};self.postMessage(h,{transfer:o})}catch(a){const r={eventType:s,eventSeq:c,result:{success:!1,reason:a}};self.postMessage(r)}});n(this,"on",(e,s)=>{this.handlers.set(e,s)});n(this,"onTransfer",(e,s)=>{this.handlers.set(e,s)});self.addEventListener("message",e=>void this.handleRequest(e))}}exports.WorkerBridge=p;exports.WrapTransferable=i;
